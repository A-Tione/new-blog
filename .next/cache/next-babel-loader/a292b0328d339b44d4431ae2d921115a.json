{"ast":null,"code":"var _jsxFileName = \"/Users/a-tione/Documents/new-blog/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { UAParser } from 'ua-parser-js';\nimport { useEffect, useState } from 'react';\n\nconst index = props => {\n  const {\n    browser\n  } = props;\n  const {\n    0: width,\n    1: setWidth\n  } = useState(0);\n  useEffect(() => {\n    const w = document.documentElement.clientWidth;\n    setWidth(w);\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"\\u4F60\\u7684\\u6D4F\\u89C8\\u5668\\u662F \", browser.name), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"\\u4F60\\u7684\\u6D4F\\u89C8\\u5668\\u7A97\\u53E3\\u5927\\u5C0F\\u662F \", width, \" \\u50CF\\u7D20\"));\n};\n\nexport default index;\nexport const getServerSideProps = async context => {\n  const ua = context.req.headers['user-agent'];\n  const result = new UAParser(ua).getResult();\n  return {\n    props: {\n      browser: result.browser\n    }\n  };\n};","map":{"version":3,"sources":["/Users/a-tione/Documents/new-blog/pages/index.tsx"],"names":["UAParser","useEffect","useState","index","props","browser","width","setWidth","w","document","documentElement","clientWidth","name","getServerSideProps","context","ua","req","headers","result","getResult"],"mappings":";;;AACA,SAAQA,QAAR,QAAuB,cAAvB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;AASA,MAAMC,KAAsB,GAAIC,KAAD,IAAW;AACxC,QAAM;AAACC,IAAAA;AAAD,MAAYD,KAAlB;AACA,QAAM;AAAA,OAACE,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC,CAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,CAAC,GAAGC,QAAQ,CAACC,eAAT,CAAyBC,WAAnC;AACAJ,IAAAA,QAAQ,CAACC,CAAD,CAAR;AACD,GAHQ,EAGN,EAHM,CAAT;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAYH,OAAO,CAACO,IAApB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAAgBN,KAAhB,kBAFF,CADF;AAMD,CAbD;;AAcA,eAAeH,KAAf;AAEA,OAAO,MAAMU,kBAAsC,GAAG,MAAOC,OAAP,IAAmB;AACvE,QAAMC,EAAE,GAAGD,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoB,YAApB,CAAX;AACA,QAAMC,MAAM,GAAG,IAAIlB,QAAJ,CAAae,EAAb,EAAiBI,SAAjB,EAAf;AACA,SAAO;AACLf,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEa,MAAM,CAACb;AADX;AADF,GAAP;AAKD,CARM","sourcesContent":["import {GetServerSideProps, NextPage} from 'next';\nimport {UAParser} from 'ua-parser-js';\nimport {useEffect, useState} from 'react';\n\ntype Props = {\n  browser: {\n    name: string;\n    version: string;\n    major: string;\n  }\n}\nconst index: NextPage<Props> = (props) => {\n  const {browser} = props;\n  const [width, setWidth] = useState(0);\n  useEffect(() => {\n    const w = document.documentElement.clientWidth;\n    setWidth(w);\n  }, []);\n  return (\n    <div>\n      <h1>你的浏览器是 {browser.name}</h1>\n      <h2>你的浏览器窗口大小是 {width} 像素</h2>\n    </div>\n  );\n};\nexport default index;\n\nexport const getServerSideProps: GetServerSideProps = async (context) => {\n  const ua = context.req.headers['user-agent'];\n  const result = new UAParser(ua).getResult();\n  return {\n    props: {\n      browser: result.browser\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}